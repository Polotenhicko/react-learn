// Предохранители
// Ранее ошибки JavaScript внутри компонентов портили внутреннее состояние React и заставляли
// его выдавать таинственные сообщения об ошибках во время следующего рендера
// Эти сообщения всегда вызывались ошибками, расположенными где-то выше в коде приложения,
// но React не предоставлял способа адекватно обрабатывать их в компонентах и не мог обработать их самостоятельно.

// Ошибка JavaScript где-то в коде UI не должна прерывать работу всего приложения.
// Чтобы исправить эту проблему для React - пользователей, React 16 вводит концепцию «предохранителя» (error boundary).

// Предохранители — это компоненты React, которые отлавливают ошибки JavaScript в любом месте деревьев их дочерних компонентов,
//  сохраняют их в журнале ошибок и выводят запасной UI вместо рухнувшего дерева компонентов.

// Предохранители отлавливают ошибки при рендеринге, в методах жизненного цикла и конструкторах деревьев компонентов,
// расположенных под ними.

// Предохранители не поймают ошибки в:

// обработчиках событий;
// асинхронном коде (например колбэках из setTimeout или requestAnimationFrame);
// серверном рендеринге (Server-side rendering); что ето
// самом предохранителе (а не в его дочерних компонентах).

// Классовый компонент является предохранителем, если он включает хотя бы один из следующих методов жизненного цикла:
// static getDerivedStateFromError() или componentDidCatch()
